## osi七层模型

![](D:\MyWork\MarkDownPicture\network\osi.png)_



### 应用层

只关心业务逻辑，不关心数据的传输

### 表示层

负责协商用于传输的数据格式

### 会话层

负责管理两个连网实体间的连接

功能及特点：建立连接，维持通信，释放连接

### 传输层

负责**将数据从一个实体**(一个服务或应用)传输到另一个实体，但不负责数据传输的方式。

相当于快递公司

**数据分隔重组：**将数据拆分后按顺序重组

**纠错：**在数据传输过程中出现问题后采取方式进行纠正

**管理连接：**处理数据的频繁交换

**流量控制：**控制传输数据的速率

**端口寻址：**标明参与传输的实体的端口号

### 网络层

负责把一个封包从一个ip地址传输到另一个ip地址

路由算法

### 数据链路层

相邻设备间的传输，并隐藏底层实现

1. 帧同步

2. 数据纠错

### 物理层

## tcp协议 传输层协议

![](D:\MyWork\MarkDownPicture\network\tcp_ip.png)

## tcp协议详解

1. 建立连接

   ![](D:\MyWork\MarkDownPicture\network\三次握手.png)

![](D:\MyWork\MarkDownPicture\network\四次挥手.png)

### 传输数据

1. 报文拆分
2. 增加tcp头
3. 数据重组

当应用层数据很大时，需要对数据进行拆分

![](D:\MyWork\MarkDownPicture\network\数据拆分.png)

我们需要在接收端进行重组，这里就需要保证顺序

![](D:\MyWork\MarkDownPicture\network\tcp序号.png)

### 纠错和checksum

lTCP拥有一个**16bit**的Checksum字段

lChecksum是一个**函数**，**把原文映射到一个不可逆的16bit的编码**中这样就可以**知道原文传输过程中有没有发生变化**

### 流控能力

主要目标：让发送方和接收方协商一个**合理的收发速率**，让两边都可以**稳定**的工作。

利用**滑动窗口**

## IP协议（网络层协议）

需要解决的三个问题

### 延迟

### 吞吐量

### 丢包率

ip协议的工作过程

![](D:\MyWork\MarkDownPicture\network\ip工作过程.png)

### ip协议头

**Type Of Service**：服务的类型，是为了响应不同的用户诉求，用来选择延迟、吞吐量和丢包率之间的关系。

**IHL（Internet Header Length)**：IP协议头的大小。

**Total Length**：报文(封包datagram)的长度

**Identification**：报文的ID，发送方分配，代表顺序

**Fragment offset**：描述是否要分包（拆分），和如何拆分。

**Time To Live**：封包存活的时间。

**Protocol**：描述上层的协议，比如TCP=6,UDP=17

**Options**：可选项

**Checksum**：检验封包的正确性